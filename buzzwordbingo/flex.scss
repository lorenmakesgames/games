////
/// Flex Grid
///
/// @todo Finish Documenting
///
/// @group flexGrid
/// @access private
/// @author whilejoe <malea78478@gmail.com>
////
////
/// Small Modifier Name
$small-modifier:  'small' !default;

/// Medium Modifier Name
$medium-modifier: 'medium' !default;

/// Large Modifier Name
$large-modifier:  'large' !default;

/// XLarge Modifier Name
$xlarge-modifier: 'xlarge' !default;

/// Breakpoints.
/// @type Map
$breakpoints: (
    #{$small-modifier}:  30rem, // 480px
    #{$medium-modifier}: 48rem, // 768px
    #{$large-modifier}:  62rem, // 992px
    #{$xlarge-modifier}: 75rem, // 1200px
) !default;

/// Flex Increments.
/// Used to generate the grid spacing, and offset modifiers.
/// @type List
$flex-increments: (5, (100 / 3)) !default;

/// Flex Gutters.
/// Applied to left and right
$flex-gutter:     .5rem !default;

/// Flex Container Name
$flex-container-name:        'flex' !default;

/// Flex Container Column Name
$flex-container-column-name: 'flex-column' !default;

/// Flex Item Name
$flex-item-name:             'flex-content' !default;

/// Flex Increment Modifier Name
$flex-increment-name:        'space' !default;

/// Flex Offset Modifier Name
$flex-offset-name:           'offset' !default;

/// Flex Order Modifier Name
$flex-order-name:            'order' !default;

/// Flex Justify Modifier Name
$flex-justify-name:          'justify' !default;

/// Flex Align Modifier Name
$flex-align-name:            'align' !default;

/// Flex Gutter Modifier Name
$flex-gutter-name:           'gutters' !default;

/// Flex Reset Modifier Name
$flex-reset-name:            'reset' !default;

/// Flex Self Modifier Name
$flex-self-name:             'self' !default;

/// Flex Justify Properties
/// @type List
$flex-justify-props: ('flex-start', 'flex-end', 'center', 'space-between', 'space-around') !default;

/// Flex Align Properties
/// @type List
$flex-align-props:   ('flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'stretch') !default;


// Increment Generator
@function _increments($increments) {
    $list: ();

    @each $increment in $increments {
        $quotient: 100 / $increment;
        @for $i from 1 through $quotient {
            $list: append($list, $i * $increment);
        }
    }

    @return $list;
}


//
// Grid Structure
//

// Grid spacing
@mixin _increment-rulesets($increments, $increment-name) {
    $increments: _increments($increments);

    @each $increment in $increments {
        .#{$increment-name}-#{round($increment)} {
            flex: 0 0 #{$increment * 1%};
            max-width: #{$increment * 1%};
    }
}

// be the size of it's content
.#{$increment-name + '-' + $flex-self-name} { flex: 0 1 auto; }

// create a sizing reset to revert to default flex behavior
.#{$increment-name + '-' + $flex-reset-name} { flex: 1 1 0% !important; } // TODO: Do we need the trump?
}

// Offset spacing
@mixin _offset-rulesets($increments, $offset-name) {
    $increments: _increments($increments);

    @each $increment in $increments {
        .#{$offset-name}-#{round($increment)} {
            margin-left: #{$increment * 1%};
    }
}

// create a reset to undo offset
.#{$offset-name + '-' + $flex-reset-name} { margin-left: 0 !important; } // TODO: Do we need the trump?
}

// Call Grid Mixins
@mixin _grid() {
    @include _increment-rulesets($flex-increments, $flex-increment-name);
    @include _offset-rulesets($flex-increments, $flex-offset-name);

    @each $size, $value in $breakpoints {
        $size-modifier: '-' + $size;

        @media screen and (min-width: #{$value}) {
            @include _increment-rulesets($flex-increments, $flex-increment-name + $size-modifier);
            @include _offset-rulesets($flex-increments, $flex-offset-name + $size-modifier);
        }
    }
}


//
// Grid Utilities
//

// Flex Justify
@mixin _justify-rulesets($name, $props) {
    @each $prop in $props {
        .#{$name}-#{$prop} { justify-content: #{$prop}; }
}
}

// Flex Align
@mixin _align-rulesets($name, $props) {
    @each $prop in $props {
        .#{$name}-#{$prop} { align-items: #{$prop}; }
}
}

// Flex Order
@mixin _order-rulesets($name) {
    @for $i from -5 through 5 {
        .#{$name}-#{$i} { order: #{$i}; }
}

// create a reset to undo offset
.#{$name}-#{$flex-reset-name} { order: 0 !important; } // TODO: Do we need the trump?
}

// Visibility
@mixin _visibility-rulesets($size-modifier: null) {
    .show#{$size-modifier}.#{$flex-container-name} { display: flex !important; }
    .show#{$size-modifier}.#{$flex-item-name} { display: block !important; }
    .hide#{$size-modifier} { display: none !important; }
}

// Call Grid Utility Mixins
@mixin _grid-utils() {
    @include _justify-rulesets($flex-justify-name, $flex-justify-props);
    @include _align-rulesets($flex-align-name, $flex-align-props);
    @include _order-rulesets($flex-order-name);
    @include _visibility-rulesets();

    @each $size, $value in $breakpoints {
        $size-modifier: '-' + $size;

        @media screen and (min-width: #{$value}) {
            @include _justify-rulesets($flex-justify-name + $size-modifier, $flex-justify-props);
            @include _align-rulesets($flex-align-name + $size-modifier, $flex-align-props);
            @include _order-rulesets($flex-order-name + $size-modifier);
            @include _visibility-rulesets($size-modifier);
        }
    }
}


//
// Base
//

// Default Flex Container
.#{$flex-container-name} {
    display: flex;
    flex: 1 1 0%;
    flex-direction: row;
    flex-wrap: wrap;
    box-sizing: border-box;
}

// Flex Column
.#{$flex-container-column-name} {
    display: flex;
    flex: 1 1 0%;
    flex-direction: column;
    box-sizing: border-box;

    // needed for inconsistent browser rendering of flex columns
    & > .#{$flex-container-name},
    > .#{$flex-item-name} { flex: 0 0 auto !important; }
}

// Flex Item
.#{$flex-item-name} {
    display: block;
    flex: 1 1 0%;
    box-sizing: border-box;
}


//
// Base Modifiers
//
.no-wrap { flex-wrap: nowrap; }

.#{$flex-gutter-name} {
    margin-right: -$flex-gutter;
    margin-left: -$flex-gutter;

    & > .#{$flex-container-name},
    > .#{$flex-item-name} {
        padding-right: $flex-gutter;
        padding-left: $flex-gutter;
    }
}

// Call Grid
@include _grid();

// Call Grid Utilities
@include _grid-utils();

// for docs only
html {
    font-size: 16px;
}

body {
    font-family: Helvetica, Arial, sans-serif;
    color: #444;
}

h1, h2, h3, h4 {
    margin-bottom: .5rem;
    font-weight: 300;
}

h2 {
    font-size: 1.6rem;
}

h3 {
    font-size: 1.3rem;
}

p {
    margin-top: 0;
    margin-bottom: 1rem;
    line-height: 1.5;
    font-weight: 300;
}

code {
    font-family: monospace, monospace;
    color: darkorchid;
}

.container {
//    max-width: 75rem;
    margin-right: auto;
    margin-left: auto;
    padding: 0;
}

@media only screen and (min-width: 800px){

    .container{
        padding-right: 0.5vw;
        padding-left: 0.5vw;
        padding-top: 1vh;
        padding-bottom: 1vh;
    }
}

.docs-header {
    padding-top: 3rem;
    padding-bottom: 3rem;
    margin-top: 0;
    margin-bottom: 3rem;
    background-color: #F5F5F5;
    border-bottom: 1px solid darken(#F5F5F5, 10%);
}

.docs {
    padding-top: 1rem;
    padding-bottom: 1rem;
}

.docs-header__title {
    margin: 0;
    font-size: 3rem;
}

.attribution {
    margin: 0;
    color: darkcyan;
}

.docs-group {
    margin-bottom: 5.5rem;

    & > p {
        margin-bottom: 2.3rem;
    }
}

.docs-group__item {
    margin-bottom: 5rem;

    & > p {
        margin-bottom: 2rem;
    }
}

.docs-grid-item {
    padding: 4vw;
//    position: relative;
    height: 20%;
    width: 20%;
    background-color: #EEE;
    color: #121212;
    box-shadow: inset 0 0 2px #BBB;
    word-break: normal;
    p {
        margin: 0;
        padding: 0;
    }
}

.docs-grid-item:hover{
    //border: 3px solid #2098d1;
    box-shadow: inset 0 0 7px #2098d1;
}

//@media only screen and (min-height: 700px){
//    .docs-grid-item{
//        height: 17.6vh;
//    }
//}

@media only screen and (min-width: 800px){
    .docs-grid-item{
        padding: 4vh;
    }
}

.docs-nested-grid-item {
    padding: 1rem;
    background-color: #BBB;
    color: #121212;
    box-shadow: inset 0 0 2px #DDD;
    p {
        margin: 0;
    }
}

.docs-footnote {
    margin-top: 1.5rem;
    text-align: right;
    font-style: italic;
    color: #555;
}

.docs-footer {
    padding-top: 1rem;
    padding-bottom: 1rem;
    background-color: #F5F5F5;
    border-top: 1px solid darken(#F5F5F5, 10%);
}
